{
	"info": {
		"_postman_id": "3ed02d47-15f6-4834-986b-4d276616f31a",
		"name": "Notes Project",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "31643916"
	},
	"item": [
		{
			"name": "Notes",
			"item": [
				{
					"name": "Create",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\":\"Mathematics\",\r\n    \"note\":\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/{{app_base}}/note",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"{{app_base}}",
								"note"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create[test-only]",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\":\"Mathematics\",\r\n    \"note\":\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/{{app_base}}/note",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"{{app_base}}",
								"note"
							]
						}
					},
					"response": []
				},
				{
					"name": "List",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}:{{port}}/{{app_base}}/note",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"{{app_base}}",
								"note"
							]
						}
					},
					"response": []
				},
				{
					"name": "By Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									" pm.test(\"Status code returned Created correct\", function () {\r",
									"     pm.response.to.have.status(200);\r",
									" });\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"const responseData = pm.response.json();\r",
									"pm.test(\"Result is an Object\", function () {\r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"});\r",
									"\r",
									"pm.test(\"The Note has created correct\", function () {\r",
									"    pm.expect(responseData).has.haveOwnProperty(\"id\");\r",
									"    pm.expect(responseData).has.haveOwnProperty(\"title\");\r",
									"    pm.expect(responseData).has.haveOwnProperty(\"note\");\r",
									"    pm.expect(responseData).has.haveOwnProperty(\"createdAt\");\r",
									"    pm.expect(responseData).has.haveOwnProperty(\"lastUpdate\");\r",
									"});\r",
									"\r",
									"const expectedResponse = {\r",
									"    \"id\":1,\r",
									"    \"title\":\"Mathematics\",\r",
									"    \"note\":\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\"\r",
									"}\r",
									"\r",
									"pm.test(\"The data is the correct\", function () {\r",
									"    pm.expect(responseData.id).to.eql(expectedResponse.id)\r",
									"    pm.expect(responseData.title).to.eql(expectedResponse.title);\r",
									"    pm.expect(responseData.note).to.eql(expectedResponse.note);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}:{{port}}/{{app_base}}/note/:id",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"{{app_base}}",
								"note",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									" pm.test(\"Status code returned Created correct\", function () {\r",
									"     pm.response.to.have.status(200);\r",
									" });\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"const jsonData = pm.response.json();\r",
									"pm.test(\"Result is an Object\", function () {\r",
									"    pm.expect(jsonData).to.be.an('object');\r",
									"});\r",
									"\r",
									"pm.test(\"The Note has updated correct\", function () {\r",
									"    pm.expect(responseData).has.haveOwnProperty(\"id\");\r",
									"    pm.expect(responseData).has.haveOwnProperty(\"title\");\r",
									"    pm.expect(responseData).has.haveOwnProperty(\"note\");\r",
									"    pm.expect(responseData).has.haveOwnProperty(\"createdAt\");\r",
									"    pm.expect(responseData).has.haveOwnProperty(\"lastUpdate\");\r",
									"});\r",
									"\r",
									"const expectedResponse  =  {\"title\":\"Social Studies\";\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 1,\r\n    \"title\":\"Social Studies\",\r\n    \"note\":\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/{{app_base}}/note",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"{{app_base}}",
								"note"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									" pm.test(\"Status code is correct\", function () {\r",
									"     pm.response.to.have.status(200);\r",
									" });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://{{host}}:{{port}}/{{app_base}}/note/:id",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"{{app_base}}",
								"note",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "host",
			"value": "localhost"
		},
		{
			"key": "port",
			"value": "8080"
		},
		{
			"key": "app_base",
			"value": "gradebook-api/v1"
		}
	]
}